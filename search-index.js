var searchIndex = JSON.parse('{\
"imsz":{"doc":"Get image width and height reading as few bytes as …","t":"NNNNNNNNEEDGINNNNNNNNNNNNNNLLLLLLLLLLLLLLLLMLLLLMFKFFLLLLLLLLLLLLLLLLLM","n":["AVIF","BMP","DDS","DIB","GIF","HEIF","ICO","IO","ImError","ImFormat","ImInfo","ImResult","Imsz","JP2K","JPEG","OpenEXR","PCX","PNG","PSD","ParserError","QOI","TGA","TIFF","UnknownFormat","VTF","WEBP","XCF","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","height","imsz","imsz","imsz_from_path","imsz_from_reader","into","into","into","name","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","width"],"q":[[0,"imsz"]],"d":["AV1 Image File Format.","Windows Bitmap, both for Windows 2.0 (BITMAPCOREHEADER) …","DirectDraw Surface files.","Device-Independent Bitmap files.","Graphics Interchange Format files in version GIF87a or …","HEIC/HEIF files. These are extremely similar to AVIF and …","ICO files can contain multiple images. This returns the …","If there was an IO error reading the image file this error …","","","The width, height and format of an image.","","Trait to provide generic imsz() function for paths, …","JPEG 2000 files.","Joint Photographic Experts Group files.","OpenEXR files.","PiCture eXchange files.","Portable Network Graphics files. Requires the first chunk …","Adobe Photoshop files.","If the image format was detected, but then something went …","Quite OK Image format files.","TARGA (Truevision Advanced Raster Graphics Adapter) files.","Tag Image File Format. Supports big endian and little …","If the image format couldn’t be detected this error is …","Valve Texture Format.","WebP files. Supported sub-formats: <code>VP8 </code>, <code>VP8L</code>, <code>VP8X</code>.","GIMP files.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Read width and height of an image.","","Read width and height of an image.","Read width and height of an image.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,6,0,0,0,0,0,1,1,1,1,1,1,6,1,1,1,6,1,1,1,1,2,6,1,2,6,1,2,1,2,1,1,1,2,6,6,2,1,2,6,6,2,0,8,0,0,1,2,6,1,1,2,1,6,1,2,6,1,2,6,1,2,6,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,1],3],[[1,4],5],[[1,4],5],[[2,4],5],[[6,4],5],[[6,4],5],0,[[]],[[]],[7,6],[[]],0,[8,[[9,[2]]]],[[],[[9,[2]]]],[[[11,[10]]],[[9,[2]]]],[[[0,[12,13]]],[[9,[2]]]],[[]],[[]],[[]],[1,14],[[]],[[]],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],0],"c":[],"p":[[4,"ImFormat"],[3,"ImInfo"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"ImError"],[3,"Error"],[8,"Imsz"],[6,"ImResult"],[3,"Path"],[8,"AsRef"],[8,"Read"],[8,"Seek"],[15,"str"],[3,"String"],[4,"Result"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
